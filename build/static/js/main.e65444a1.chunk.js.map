{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.jpg","app.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","map","positive","death","date","dateChecked","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,sBAAsB,MAAQ,uB,mOC8ClLC,EAzCF,SAAC,GAAsD,IAAD,IAApDC,KAAMC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,WAC/C,OAAIH,EAIF,qBAAKI,UAAWC,IAAOC,UAAvB,SACI,eAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,SAApC,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOY,UAA7E,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAA9C,sBACA,cAACF,EAAA,EAAD,CAAYG,QAAQ,KAApB,SACI,cAAC,IAAD,CAASC,MAAO,EAAGC,IAAMxB,EAAUyB,MAAOC,SAAU,IAAKC,UAAU,QAEvE,cAACR,EAAA,EAAD,CAAYC,MAAM,gBAAlB,SAAmC,IAAIQ,KAAKzB,GAAY0B,iBACxD,cAACV,EAAA,EAAD,CAAYG,QAAQ,QAApB,qDAGV,cAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOJ,WAA7E,SACM,eAACiB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAA9C,uBACA,cAACF,EAAA,EAAD,CAAYG,QAAQ,KAApB,SACI,cAAC,IAAD,CAASC,MAAO,EAAGC,IAAMvB,EAAUwB,MAAOC,SAAU,IAAKC,UAAU,QAEvE,cAACR,EAAA,EAAD,CAAYC,MAAM,gBAAlB,SAAmC,IAAIQ,KAAKzB,GAAY0B,iBACxD,cAACV,EAAA,EAAD,CAAYG,QAAQ,QAApB,mDAGV,cAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOH,QAA7E,SACM,eAACgB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAA9C,oBACA,cAACF,EAAA,EAAD,CAAYG,QAAQ,KAApB,SACI,cAAC,IAAD,CAASC,MAAO,EAAGC,IAAMtB,EAAOuB,MAAOC,SAAU,IAAKC,UAAU,QAEpE,cAACR,EAAA,EAAD,CAAYC,MAAM,gBAAlB,SAAmC,IAAIQ,KAAKzB,GAAY0B,iBACxD,cAACV,EAAA,EAAD,CAAYG,QAAQ,QAApB,2DAhCP,e,yBCLTQ,EAAM,iCAECC,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACrBC,EAAgBJ,EAEjBE,IACCE,EAAa,UAAMJ,EAAN,sBAAuBE,IAJf,kBAQuCG,IAAMC,IAAIF,GARjD,2BAQlBnC,KAAMC,EARY,EAQZA,UAAWC,EARC,EAQDA,UAAWC,EARV,EAQUA,OAAQC,EARlB,EAQkBA,WARlB,kBAUlB,CAAEH,YAAYC,YAAWC,SAAQC,eAVf,kCAazBkC,QAAQC,IAAR,MAbyB,0DAAH,sDAgCTC,EAAc,uCAAG,8BAAAN,EAAA,+EAEDE,IAAMC,IAAI,kDAFT,uBAEhBrC,EAFgB,EAEhBA,KAFgB,kBAIjBA,EAAKyC,KAAI,kBAAwD,CAAExC,UAA1D,EAAGyC,SAA4ExC,UAA/E,EAAaA,UAA6EC,OAA1F,EAAwBwC,MAAiFC,KAAzG,EAA+BC,iBAJvB,wHAAH,qDAUdC,EAAc,uCAAG,8BAAAZ,EAAA,+EAEUE,IAAMC,IAAN,UAAaN,EAAb,eAFV,uBAEVgB,EAFU,EAElB/C,KAAQ+C,UAFU,kBAGlBA,EAAUN,KAAI,SAACR,GAAD,OAAaA,EAAQe,SAHjB,gCAKtBV,QAAQC,IAAR,MALsB,yDAAH,qD,yBCWZU,EApDF,SAAC,GAAqD,IAAD,IAAnDjD,KAAOC,EAA4C,EAA5CA,UAAYE,EAAgC,EAAhCA,OAAQD,EAAwB,EAAxBA,UAAY+B,EAAY,EAAZA,QAAY,EAC5BiB,mBAAS,IADmB,mBACvDC,EADuD,KAC5CC,EAD4C,KAG9DC,qBAAU,YACQ,uCAAG,sBAAAnB,EAAA,kEACbkB,EADa,SACMZ,IADN,6EAAH,qDAIdc,KACD,IAEH,IAAMC,EACFJ,EAAUK,OACN,cAAC,OAAD,CAAOxD,KAAM,CACRyD,OAAQN,EAAUV,KAAI,qBAAEG,QACxBc,SAAU,CAAC,CACP1D,KAAKmD,EAAUV,KAAI,qBAAExC,aACrB0D,MAAO,WACPC,YAAa,UACbC,MAAM,GACR,CACC7D,KAAKmD,EAAUV,KAAI,qBAAEtC,UACrBwD,MAAO,SACPC,YAAa,MACbE,gBAAgB,uBAChBD,MAAM,OAEH,KAGVE,EACF9D,EAAa,cAAC,MAAD,CACZD,KAAQ,CACNyD,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAS,CAAC,CACNC,MAAO,SACPG,gBAAiB,CAAC,wBAAyB,uBAAwB,yBACnE9D,KAAM,CAACC,EAAUyB,MAAOxB,EAAUwB,MAAOvB,EAAOuB,UAGtDsC,QAAS,CACLC,OAAQ,CAACC,SAAQ,GACjBC,MAAO,CAACD,SAAS,EAAME,KAAK,oBAAD,OAAsBnC,OAE/C,KAEd,OACE,qBAAK5B,UAAWC,IAAOC,UAAvB,SACK0B,EAAU8B,EAAWR,K,mCC9BjBc,EAlBM,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,oBAAwB,EACKpB,mBAAS,IADd,mBACpCqB,EADoC,KAClBC,EADkB,KAS3C,OAPAnB,qBAAU,YACQ,uCAAG,sBAAAnB,EAAA,kEACZsC,EADY,SACc1B,IADd,6EAAH,qDAIdQ,KACD,CAACkB,IAED,cAACC,EAAA,EAAD,CAAapE,UAAWC,IAAOmE,YAA/B,SACI,eAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOP,EAAoBO,EAAEC,OAAOpD,QAA5E,UACI,wBAAQA,MAAM,GAAd,oBACC6C,EAAiB9B,KAAI,SAACR,EAAS8C,GAAV,OAAgB,wBAAgBrD,MAAOO,EAAvB,SAAiCA,GAApB8C,Y,iBCnBnD,MAA0B,kCCuC1BC,E,4MA7BXC,MAAQ,CACJjF,KAAK,GACNiC,QAAS,I,EAQZqC,oB,uCAAsB,WAAOrC,GAAP,eAAAC,EAAA,sEACDF,EAAUC,GADT,OACdjC,EADc,OAGpB,EAAKkF,SAAS,CAAClF,OAAMiC,QAAQA,IAHT,2C,wPAJCD,I,OAAbhC,E,OAENmF,KAAKD,SAAS,CAAClF,S,qIAOV,IAAD,EACoBmF,KAAKF,MAAtBjF,EADH,EACGA,KAAMiC,EADT,EACSA,QACb,OACI,sBAAK5B,UAAWC,IAAOC,UAAvB,UACE,qBAAMF,UAAWC,IAAO8E,MAAOC,IAAKC,EAAaC,IAAI,aACrD,cAAC,EAAD,CAAOvF,KAAMA,IACb,cAAC,EAAD,CAAesE,oBAAqBa,KAAKb,sBACzC,cAAC,EAAD,CAAOtE,KAAMA,EAAMiC,QAASA,W,GAvBxBuD,IAAMC,WCJxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,mBCJjDhG,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCA7DD,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,sC","file":"static/js/main.e65444a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1Kecs\",\"card\":\"Cards_card__3IYV6\",\"infected\":\"Cards_infected__1Hr_m\",\"recovered\":\"Cards_recovered__2pO12\",\"deaths\":\"Cards_deaths__138ZA\",\"image\":\"Cards_image__1K-X6\"};","import React from 'react'\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\n\r\nconst Cards =({data:{confirmed, recovered, deaths, lastUpdate}})=> {\r\n    if(!confirmed){\r\n        return \"Loading ...\";\r\n    }\r\n    return (\r\n      <div className={styles.container}>\r\n          <Grid container spacing={3} justify=\"center\">\r\n              <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                  <CardContent>\r\n                      <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                      <Typography variant=\"h5\">\r\n                          <CountUp start={0} end ={confirmed.value} duration={2.5} separator=\",\"  />\r\n                      </Typography>\r\n                      <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                      <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                  </CardContent>\r\n            </Grid>\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                  <CardContent>\r\n                      <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                      <Typography variant=\"h5\">\r\n                          <CountUp start={0} end ={recovered.value} duration={2.5} separator=\",\"  />\r\n                      </Typography>\r\n                      <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                      <Typography variant=\"body2\">Number of recoveries of COVID-19</Typography>\r\n                  </CardContent>\r\n            </Grid>\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                  <CardContent>\r\n                      <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                      <Typography variant=\"h5\">\r\n                          <CountUp start={0} end ={deaths.value} duration={2.5} separator=\",\"  />\r\n                      </Typography>\r\n                      <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                      <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                  </CardContent>\r\n            </Grid>\r\n          </Grid>\r\n      </div>\r\n    )\r\n}\r\nexport default Cards;\r\n","/*jshint esversion: 8 */\r\nimport axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\nlet changeableUrl = url;\r\n\r\nif(country){\r\n    changeableUrl = `${url}/countries/${country}`;\r\n}\r\n\r\ntry {\r\nconst {data:{confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl);\r\n\r\nreturn { confirmed,  recovered, deaths, lastUpdate};\r\n\r\n}catch(error){\r\nconsole.log(error);\r\n}\r\n}\r\n\r\n/*export const fetchDailyData = async () => {\r\n    try{\r\n       const {data} =await axios.get(`${url}/daily`);\r\n\r\nconst modifiedData = data.map((dailyData) => ({\r\n    confirmed:dailyData.confirmed.total,\r\n    deaths: dailyData.deaths.total,\r\n    date: dailyData.reportDate,\r\n}));\r\nreturn modifiedData;\r\n\r\n    }catch(error){\r\n     console.log(error);\r\n    }\r\n}*/\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n      const { data } = await axios.get('https://api.covidtracking.com/v1/us/daily.json');\r\n  \r\n      return data.map(({ positive, recovered, death, dateChecked: date }) => ({ confirmed: positive, recovered, deaths: death, date }));\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n     const {data : {countries}} = await axios.get(`${url}/countries`);\r\n     return countries.map((country) => country.name);\r\n    } catch (error){\r\n        console.log(error);\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart =({data: {confirmed,  deaths, recovered}, country})=> {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length ? (\r\n            <Line  data={{ \r\n                 labels: dailyData.map(({date})=> date),\r\n                 datasets: [{\r\n                     data:dailyData.map(({confirmed}) => confirmed),\r\n                     label: 'Infected',\r\n                     borderColor: '#3333ff',\r\n                     fill: true,\r\n                }, {\r\n                    data:dailyData.map(({deaths}) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: `rgba(255, 0, 0, 0.5)`,\r\n                    fill: true,\r\n                }],\r\n             }}   />) :null\r\n            );\r\n\r\n       const barChart = (\r\n           confirmed ? (<Bar\r\n            data = {{\r\n              labels: ['Infected', 'Recovered', 'Deaths'],\r\n              datasets:[{\r\n                  label: 'People',\r\n                  backgroundColor: [' rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', ' rgba(255, 0, 0, 0.5)'],\r\n                  data: [confirmed.value, recovered.value, deaths.value]\r\n              }]\r\n            }}\r\n            options={{\r\n                legend: {display:false},\r\n                title: {display: true, text: `Current state in ${country}`}\r\n            }}\r\n            />) : null  )    \r\n\r\n    return (\r\n      <div className={styles.container}>\r\n          {country ? barChart : lineChart}\r\n      </div>\r\n    )\r\n}\r\nexport default Chart;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl, StylesProvider} from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\n\r\nconst CountryPicker =({handleCountryChange})=> {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n    useEffect(() => {\r\n        const fetchAPI = async () =>{\r\n             setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n    return (\r\n       <FormControl className={styles.FormControl}>\r\n           <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n               <option value=\"\">Global</option>\r\n               {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n           </NativeSelect>\r\n       </FormControl>\r\n    )\r\n}\r\nexport default CountryPicker;\r\n","export default __webpack_public_path__ + \"static/media/image.d5d55ef8.jpg\";","/*jshint esversion: 8 */\r\nimport React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\n\r\nimport coronaImage from './images/image.jpg';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data:{},\r\n       country: ''\r\n    }\r\n\r\n   async componentDidMount(){\r\n        const data = await fetchData();\r\n       \r\n        this.setState({data});       \r\n    }\r\n    handleCountryChange = async (country) =>{\r\n      const data = await fetchData(country);\r\n\r\n      this.setState({data, country:country});\r\n    }\r\n    render(){\r\n        const {data, country} = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n              <img  className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\r\n              <Cards data={data}/>\r\n              <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n              <Chart data={data} country={country}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import  React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1rAZg\",\"image\":\"App_image__1mAV5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2Dw5X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3z5jr\"};"],"sourceRoot":""}